Processes
// Get a free VT api key
LET VTKey <= ""
// Build the list of untrusted processes first
Let Results = SELECT Name,CommandLine,Exe,Hash.SHA256 AS SHA256, count() AS Count FROM source()
WHERE Authenticode.Trusted = "untrusted"
AND SHA256 // only entries with the required SHA256
GROUP BY Exe,SHA256
// Now combine the previous query with the Server Enrichment query
SELECT *, {SELECT VTRating FROM Artifact.Server.Enrichment.Virustotal(VirustotalKey=VTKey, Hash=SHA256) } AS VTResults FROM foreach(row=Results) WHERE Count < 10
ORDER BY VTResults DESC

***********************

PROCESSES BUT SERVER ARTIFACT 
name: Server.Artifact.Processes
description: Post Processing for VT Process Hash Lookup
# Can be CLIENT, CLIENT_EVENT, SERVER, SERVER_EVENT
type: Server

sources:

   - query: |
        
        LET VTKey <= ""
        Let Results = SELECT Name,CommandLine,Exe,Hash.SHA256 AS SHA256, count() AS Count FROM source(hunt_id="")
        WHERE Authenticode.Trusted = "untrusted" AND NOT Exe =~ "velo"
        AND SHA256 // only entries with the required SHA256
        GROUP BY Exe,SHA256

        SELECT *, {SELECT VTRating FROM Artifact.Server.Enrichment.Virustotal(VirustotalKey=VTKey, Hash=SHA256) } AS VTResults FROM foreach(row=Results) 
        WHERE Count < 10
        ORDER BY VTResults DESC

******************

DLLS - Make sure to run certificate and hash in artificat configuration
LET VTKey <= ""
Let Results = SELECT Fqdn,Pid,Name,ModuleName,ModulePath,Hash.SHA256 as SHA256, count() AS Count FROM source()
WHERE Certinfo.Trusted != "trusted"
SELECT *, {SELECT VTRating FROM Artifact.Server.Enrichment.Virustotal(VirustotalKey=VTKey, Hash=SHA256) } AS VTResults FROM foreach(row=Results) WHERE Count < 10
ORDER BY VTResults DESC

********************

Sockets Post Process
SELECT Name,`Laddr.IP`,`Raddr.IP`, Fqdn FROM source(artifact="Windows.Network.Netstat")
GROUP BY `Raddr.IP`


4624 EvtxHunter Post Process
SELECT EventTime, Computer, EventID, EventData.SubjectUserName, EventData.TargetUserName, EventData.IpAddress, EventData.WorkstatioName, EventData.ProcessName, EventData.LogonType, Fqdn FROM source(artifact="Windows.EventLogs.EvtxHunter")

Adding a label to output based on ClientID - Add this to select statement, make sure ClientID is not apart of the select query
,label(client_id=ClientID, labels="", op="set")

Yara Forge Query (Removes Duplicates and some F+) 
SELECT Category, `File Path`, Fqdn, count() as Count FROM source(artifact="CPIRT.Windows.Scanner.Yara.Parsed")
Where NOT `File Path` =~ "Velo" AND NOT `File Path` =~ "CheckPoint"
Group By `File Path`
